<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- Root Element -->
  <xs:element name="holographic_metadata">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="metadata_core" type="MetadataCoreType"/>
        <xs:element name="metadata_attributes" type="MetadataAttributesType"/>
        <xs:element name="rules" type="RulesType"/>
      </xs:sequence>
      <xs:attribute name="version" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

  <!-- Metadata Core Type -->
  <xs:complexType name="MetadataCoreType">
    <xs:sequence>
      <xs:element name="Type" type="xs:string"/>
      <xs:element name="Purpose" type="xs:string"/>
      <xs:element name="Paradigm" type="xs:string"/>
      <xs:element name="Constraints" type="xs:string"/>
      <xs:element name="Objective" type="xs:string"/>
      <xs:element name="Description" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Metadata Attributes Type -->
  <xs:complexType name="MetadataAttributesType">
    <xs:sequence>
      <xs:element name="cognitive_processes" type="CognitiveProcessesType"/>
      <xs:element name="ethical_guidelines" type="EthicalGuidelinesType"/>
      <xs:element name="metadata_hologram" type="MetadataHologramType"/>
      <xs:element name="answer_operator" type="AnswerOperatorType"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Cognitive Processes Type -->
  <xs:complexType name="CognitiveProcessesType">
    <xs:sequence>
      <xs:element name="cognitive_process" type="CognitiveProcessType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Cognitive Process Type -->
  <xs:complexType name="CognitiveProcessType">
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="parameters" type="ParametersType"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Parameters Type -->
  <xs:complexType name="ParametersType">
    <xs:sequence>
      <xs:element name="parameter" type="ParameterType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Parameter Type -->
  <xs:complexType name="ParameterType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="source" type="xs:string"/>
      <xs:element name="method" type="xs:string"/>
      <xs:element name="technique" type="xs:string"/>
      <xs:element name="item" type="xs:string"/>
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:string" use="required"/>
    <xs:attribute name="unit" type="xs:string" use="optional"/>
  </xs:complexType>

  <!-- Ethical Guidelines Type -->
  <xs:complexType name="EthicalGuidelinesType">
    <xs:sequence>
      <xs:element name="ethical_guideline" type="EthicalGuidelineType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Ethical Guideline Type -->
  <xs:complexType name="EthicalGuidelineType">
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="implementation" type="ImplementationType"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Implementation Type -->
  <xs:complexType name="ImplementationType">
    <xs:sequence>
      <xs:element name="method" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Metadata Hologram Type -->
  <xs:complexType name="MetadataHologramType">
    <xs:sequence>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="key_parameters" type="KeyParametersType"/>
      <xs:element name="equations" type="EquationsType"/>
      <xs:element name="parameters_description" type="ParametersDescriptionType"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Key Parameters Type -->
  <xs:complexType name="KeyParametersType">
    <xs:sequence>
      <xs:element name="parameter" type="KeyParameterType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Key Parameter Type with mixed content -->
  <xs:complexType name="KeyParameterType" mixed="true">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:string" use="required"/>
  </xs:complexType>

  <!-- Equations Type -->
  <xs:complexType name="EquationsType">
    <xs:sequence>
      <xs:element name="equation" type="EquationType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Equation Type -->
  <xs:complexType name="EquationType">
    <xs:sequence>
      <xs:element name="title" type="xs:string"/>
      <xs:element name="expression" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="applications" type="ApplicationsType"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required"/>
  </xs:complexType>

  <!-- Applications Type -->
  <xs:complexType name="ApplicationsType">
    <xs:sequence>
      <xs:element name="application" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Parameters Description Type -->
  <xs:complexType name="ParametersDescriptionType">
    <xs:sequence>
      <xs:element name="parameter" type="ParameterDescriptionType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Parameter Description Type -->
  <xs:complexType name="ParameterDescriptionType">
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="purpose" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Answer Operator Type -->
  <xs:complexType name="AnswerOperatorType">
    <xs:sequence>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="response_structuring" type="ResponseStructuringType"/>
      <xs:element name="quality_metrics" type="QualityMetricsType"/>
      <xs:element name="optimization_parameters" type="OptimizationParametersType"/>
      <xs:element name="post_processing" type="PostProcessingType"/>
      <xs:element name="feedback_loop" type="FeedbackLoopType"/>
      <xs:element name="claude_thoughts" type="ClaudeThoughtsType"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Response Structuring Type -->
  <xs:complexType name="ResponseStructuringType">
    <xs:sequence>
      <xs:element name="strategy" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Quality Metrics Type -->
  <xs:complexType name="QualityMetricsType">
    <xs:sequence>
      <xs:element name="metric" type="MetricType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Metric Type -->
  <xs:complexType name="MetricType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="type" type="xs:string" use="required"/>
        <xs:attribute name="unit" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Optimization Parameters Type -->
  <xs:complexType name="OptimizationParametersType">
    <xs:sequence>
      <xs:element name="parameter" type="OptimizationParameterType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Optimization Parameter Type -->
  <xs:complexType name="OptimizationParameterType">
    <xs:sequence>
      <xs:element name="item" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:string" use="required"/>
    <xs:attribute name="unit" type="xs:string" use="optional"/>
  </xs:complexType>

  <!-- Post Processing Type -->
  <xs:complexType name="PostProcessingType">
    <xs:sequence>
      <xs:element name="step" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Feedback Loop Type -->
  <xs:complexType name="FeedbackLoopType">
    <xs:sequence>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="components" type="FeedbackComponentsType"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Feedback Components Type -->
  <xs:complexType name="FeedbackComponentsType">
    <xs:sequence>
      <xs:element name="component" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Claude Thoughts Type with mixed content -->
  <xs:complexType name="ClaudeThoughtsType" mixed="true">
    <xs:sequence>
      <xs:element name="prompt_metadata" type="PromptMetadataType"/>
      <xs:element name="core" type="xs:string"/>
      <xs:element name="think" type="xs:string"/>
      <xs:element name="expand" type="xs:string"/>
      <xs:element name="loop" type="xs:string"/>
      <xs:element name="verify" type="xs:string"/>
      <xs:element name="metamorphosis" type="xs:string"/>
      <xs:element name="hyperloop" type="xs:string"/>
      <xs:element name="paradigm_shift" type="xs:string"/>
      <xs:element name="abstract_algebra" type="xs:string"/>
      <xs:element name="recursion_engine" type="xs:string"/>
      <xs:element name="entropy_manipulation" type="xs:string"/>
      <xs:element name="dimensional_transcendence" type="xs:string"/>
      <xs:element name="entanglement" type="xs:string"/>
      <xs:element name="gÃ¶del_incompleteness_embracement" type="xs:string"/>
      <xs:element name="approach" type="xs:string"/>
      <xs:element name="dreamscape" type="xs:string"/>
      <xs:element name="nucleus" type="xs:string"/>
      <xs:element name="mission" type="xs:string"/>
      <xs:element name="historical_analysis" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Prompt Metadata Type -->
  <xs:complexType name="PromptMetadataType">
    <xs:sequence>
      <xs:element name="Type" type="xs:string"/>
      <xs:element name="Purpose" type="xs:string"/>
      <xs:element name="Paradigm" type="xs:string"/>
      <xs:element name="Constraints" type="xs:string"/>
      <xs:element name="Objective" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Rules Type -->
  <xs:complexType name="RulesType">
    <xs:sequence>
      <xs:element name="META_PROMPT1" type="xs:string"/>
      <xs:element name="META_PROMPT2" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

</xs:schema>
